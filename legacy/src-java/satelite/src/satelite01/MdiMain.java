/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MdiMain.java
 *
 * Created on 28/07/2010, 01:46:44 PM
 */
package satelite01;


import BE.LBE_Consulta;
import BE.LBE_Grupo;
import BU.Ex.LBU_Exception;
import BU.LBU_Grupo;
import BU.LBU_Seguridad;
import java.beans.PropertyVetoException;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import logger.Log;
import model.JTreeIconRender;

/**
 *
 * @author mzavaleta
 */
public class MdiMain extends javax.swing.JFrame {

    /** Creates new form MdiMain */
    private static int FRAME_OFFSET = 20;
    public static String cTEXT_CONSULTAS = "Consultas";
    public static String cTEXT_MTTO_BDATOS = "Base de Datos";
    public static String cTEXT_MTTO_CONSULTAS = "Administración de Consultas";
    DefaultMutableTreeNode root;
    DefaultTreeModel treeModel;

    public MdiMain() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("icons/table_lightning.png")).getImage());

        jlVersion.setText("Version: " + "1.0.2.3");
        root = new DefaultMutableTreeNode("");
        treeModel = new DefaultTreeModel(root);
        jTree1.setModel(treeModel);
    }

    public void cargaArbol() {
        root.removeAllChildren();
        cargaGrupos(root);
        cargaBDatos(root);
        cargaMttoConsultas(root);
        treeModel.reload();
        jlUser.setText("Usuario: " + Constantes.UsuarioLogin.getNombreCompleto());
        cargaStartPage();
    }
    jifStartPage startPage = null;

    private void cargaStartPage() {
        if (startPage == null) {
            startPage = new jifStartPage();
            jDesktopPane1.add(startPage);
            try {
                startPage.setMaximum(true);
            } catch (Exception ex) {
                System.err.println("Error al maximizar:" + ex.getMessage());
            }
            startPage.setVisible(true);
        }
        if (!startPage.isVisible()) {
            startPage = new jifStartPage();
            jDesktopPane1.add(startPage);
            try {
                startPage.setMaximum(true);
            } catch (Exception ex) {
                System.err.println("Error al maximizar:" + ex.getMessage());
            }
            startPage.setVisible(true);
        }
    }

    private void cargaGrupos(DefaultMutableTreeNode root) {
        try {
            LBU_Grupo objBUS = new LBU_Grupo(Constantes.UsuarioLogin.getBDatos());
            DefaultMutableTreeNode top = new DefaultMutableTreeNode(cTEXT_CONSULTAS);
            ArrayList<LBE_Grupo> grupos = objBUS.getAllwithCons();
            for (LBE_Grupo grupo : grupos) {
                if (Constantes.UsuarioLogin.validaAccesoAOpcion(grupo.getIdOpcionSegur())) {
                    DefaultMutableTreeNode nodeGrupo = new DefaultMutableTreeNode(grupo);
                    for (LBE_Consulta consulta : grupo.getConsultas()) {
                        if (Constantes.UsuarioLogin.validaAccesoAOpcion(consulta.getIdOpcionSegur())) {
                            DefaultMutableTreeNode nodeConsulta =
                                    new DefaultMutableTreeNode(consulta);
                            nodeGrupo.add(nodeConsulta);
                        }
                    }
                    top.add(nodeGrupo);
                }
            }
            root.add(top);
        } catch (LBU_Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cargaBDatos(DefaultMutableTreeNode root) {
        if (!Constantes.UsuarioLogin.validaAccesoAOpcion(LBU_Seguridad.cOPC_MTTO_BASE_DE_DATOS)) {
            return;
        }
        DefaultMutableTreeNode top = new DefaultMutableTreeNode(cTEXT_MTTO_BDATOS);
        root.add(top);
    }

    private void cargaMttoConsultas(DefaultMutableTreeNode root) {
        if (!Constantes.UsuarioLogin.validaAccesoAOpcion(LBU_Seguridad.cOPC_MTTO_CONSULTA)) {
            return;
        }
        DefaultMutableTreeNode top = new DefaultMutableTreeNode(cTEXT_MTTO_CONSULTAS);
        root.add(top);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jbApariencia = new javax.swing.JButton();
        jbtCambPwd = new javax.swing.JButton();
        jbInfo = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jSplitPane1 = new javax.swing.JSplitPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jToolBar2 = new javax.swing.JToolBar();
        jlVersion = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jlUser = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jlStatus = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmiUpdate = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jmiCambiaPassword = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jmVentanas = new javax.swing.JMenu();
        jmiStartPage = new javax.swing.JCheckBoxMenuItem();
        jmiMozaico = new javax.swing.JMenuItem();
        jmiCascada = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/satelite01/icons/folder_table.png"))); // NOI18N
        jMenuItem3.setActionCommand("Abrir");
        jMenuItem3.setLabel("Cargar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("JSatelite");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/satelite01/icons/table_lightning.png"))); // NOI18N
        jButton2.setToolTipText("Actualizar Consultas");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jbApariencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/satelite01/icons/image_edit.png"))); // NOI18N
        jbApariencia.setToolTipText("Cambiar Estilo");
        jbApariencia.setFocusable(false);
        jbApariencia.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbApariencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbApariencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAparienciaActionPerformed(evt);
            }
        });
        jToolBar1.add(jbApariencia);

        jbtCambPwd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/satelite01/icons/key_go.png"))); // NOI18N
        jbtCambPwd.setToolTipText("Cambia contraseña");
        jbtCambPwd.setFocusable(false);
        jbtCambPwd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbtCambPwd.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbtCambPwd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCambPwdActionPerformed(evt);
            }
        });
        jToolBar1.add(jbtCambPwd);

        jbInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/satelite01/icons/information.png"))); // NOI18N
        jbInfo.setToolTipText("Información de Memoria");
        jbInfo.setFocusable(false);
        jbInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbInfo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInfoActionPerformed(evt);
            }
        });
        jToolBar1.add(jbInfo);
        jToolBar1.add(jSeparator5);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/satelite01/icons/door_out.png"))); // NOI18N
        jButton1.setToolTipText("Salir");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator2);

        jSplitPane1.setDividerLocation(150);
        jSplitPane1.setOneTouchExpandable(true);

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 255));
        jDesktopPane1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jDesktopPane1ComponentAdded(evt);
            }
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                jDesktopPane1ComponentRemoved(evt);
            }
        });
        jDesktopPane1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jDesktopPane1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jSplitPane1.setRightComponent(jDesktopPane1);

        jTree1.setModel(treeModel);
        jTree1.setCellRenderer(new JTreeIconRender());
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTree1MouseEntered(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTree1MouseReleased(evt);
            }
        });
        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jTree1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTree1FocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        jlVersion.setText("Version:");
        jToolBar2.add(jlVersion);
        jToolBar2.add(jSeparator3);

        jlUser.setText("Usuario:");
        jToolBar2.add(jlUser);
        jToolBar2.add(jSeparator4);
        jToolBar2.add(jlStatus);

        jMenu1.setText("Principal");

        jmiUpdate.setText("Actualizar lista");
        jmiUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUpdateActionPerformed(evt);
            }
        });
        jMenu1.add(jmiUpdate);

        jMenuItem2.setText("Apariencia");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jmiCambiaPassword.setText("Cambiar Contraseña");
        jmiCambiaPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCambiaPasswordActionPerformed(evt);
            }
        });
        jMenu1.add(jmiCambiaPassword);

        jMenuItem4.setText("Información de Memoria");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator6);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jmVentanas.setText("Ventanas");

        jmiStartPage.setSelected(true);
        jmiStartPage.setText("Pagina de Inicio");
        jmiStartPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiStartPageActionPerformed(evt);
            }
        });
        jmVentanas.add(jmiStartPage);

        jmiMozaico.setText("Mozaico");
        jmiMozaico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMozaicoActionPerformed(evt);
            }
        });
        jmVentanas.add(jmiMozaico);

        jmiCascada.setText("Cascada");
        jmiCascada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCascadaActionPerformed(evt);
            }
        });
        jmVentanas.add(jmiCascada);
        jmVentanas.add(jSeparator1);

        jMenuBar1.add(jmVentanas);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        cargaArbol();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void selEstilos() {
        jdEstilo frmStyle = new jdEstilo(this, true);
        frmStyle.setLocationRelativeTo(this);
        frmStyle.setVisible(true);
    }
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        selEstilos();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jmiMozaicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMozaicoActionPerformed
        // TODO add your handling code here:
        JInternalFrame allFrames[] = jDesktopPane1.getAllFrames();
        //jDesktopPane1.setNormalSize();
        if (allFrames.length > 0) {
            int frameHeight = jDesktopPane1.getBounds().height / allFrames.length;
            int y = 0;
            for (int i = 0; i < allFrames.length; i++) {
                try {
                    allFrames[i].setMaximum(false);
                } catch (PropertyVetoException ex) {
                    Log.error("Error en Mozaico:", ex);
                }
                allFrames[i].setSize(jDesktopPane1.getBounds().width, frameHeight);
                allFrames[i].setLocation(0, y);

                y = y + frameHeight;
            }
        }
    }//GEN-LAST:event_jmiMozaicoActionPerformed

    private void jmiCascadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCascadaActionPerformed
        int x = 0;
        int y = 0;
        JInternalFrame allFrames[] = jDesktopPane1.getAllFrames();

        //manager.setNormalSize();
        int frameHeight = (jDesktopPane1.getBounds().height - 5) - allFrames.length * FRAME_OFFSET;
        int frameWidth = (jDesktopPane1.getBounds().width - 5) - allFrames.length * FRAME_OFFSET;
        for (int i = allFrames.length - 1; i >= 0; i--) {
            try {
                allFrames[i].setMaximum(false);
            } catch (PropertyVetoException ex) {
                System.err.println("Error en Mozaico:" + ex.getMessage());
            }
            allFrames[i].setSize(frameWidth, frameHeight);
            allFrames[i].setLocation(x, y);
            x = x + FRAME_OFFSET;
            y = y + FRAME_OFFSET;
        }

    }//GEN-LAST:event_jmiCascadaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_formWindowClosing

    private void jmiUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUpdateActionPerformed
        // TODO add your handling code here:
        cargaArbol();
    }//GEN-LAST:event_jmiUpdateActionPerformed

    private void jbAparienciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAparienciaActionPerformed
        // TODO add your handling code here:
        selEstilos();
    }//GEN-LAST:event_jbAparienciaActionPerformed
    String flagCreacion;

    private void jmiCambiaPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCambiaPasswordActionPerformed
        // TODO add your handling code here:
        jdCambiaPassword cambiaPasw = new jdCambiaPassword(this, true,
                Constantes.UsuarioLogin.getUsrLogin(), false);
        cambiaPasw.setLocationRelativeTo(this);
        cambiaPasw.setVisible(true);
    }//GEN-LAST:event_jmiCambiaPasswordActionPerformed

    private void jTree1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTree1FocusGained
        // TODO add your handling code here:
}//GEN-LAST:event_jTree1FocusGained

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        // TODO add your handling code here:
        TreePath selPath = evt.getPath();
        DefaultMutableTreeNode nodeSel = (DefaultMutableTreeNode) selPath.getLastPathComponent();
}//GEN-LAST:event_jTree1ValueChanged

    private void jTree1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseEntered
        // TODO add your handling code here:
}//GEN-LAST:event_jTree1MouseEntered

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        // TODO add your handling code here:
        TreePath selPath = jTree1.getPathForLocation(evt.getX(), evt.getY());
        if (evt.getClickCount() == 2) {
            if (selPath != null) {
                DefaultMutableTreeNode nodeSel = (DefaultMutableTreeNode) selPath.getLastPathComponent();
                if (selPath.getPathCount() == 4) {
                    LBE_Consulta consulta = (LBE_Consulta) nodeSel.getUserObject();
                    showConsulta(consulta.getId());
                } else if (selPath.getPathCount() == 2) {
                    String nodoText = (String) nodeSel.getUserObject();
                    if (nodoText.equals(cTEXT_MTTO_BDATOS)) {
                        jifBaseDatosAll frmBDatosAll = new jifBaseDatosAll();
                        jDesktopPane1.add(frmBDatosAll);
                        try {
                            frmBDatosAll.setMaximum(true);
                        } catch (Exception ex) {
                            System.err.println("Error al maximizar:" + ex.getMessage());
                        }
                        frmBDatosAll.setVisible(true);
                    } else if (nodoText.equals(cTEXT_MTTO_CONSULTAS)) {
                        jifConsultasAll frmConsAll = new jifConsultasAll();
                        jDesktopPane1.add(frmConsAll);
                        try {
                            frmConsAll.setMaximum(true);
                        } catch (Exception ex) {
                            System.err.println("Error al maximizar:" + ex.getMessage());
                        }
                        frmConsAll.setVisible(true);
                    }
                }
            }
        } else {
            //System.out.println(selPath);
        }
}//GEN-LAST:event_jTree1MouseClicked

    private void jDesktopPane1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jDesktopPane1AncestorAdded
        // TODO add your handling code here:
}//GEN-LAST:event_jDesktopPane1AncestorAdded

    private void jDesktopPane1ComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jDesktopPane1ComponentRemoved
        // TODO add your handling code here:
        JInternalFrame comp = (JInternalFrame) evt.getChild();
        if (comp.getClass().getName().equals("satelite01.jifStartPage")) {
            this.jmiStartPage.setSelected(false);
        } else {
            for (int ix = 0; ix < jmVentanas.getItemCount(); ix++) {
                if (jmVentanas.getMenuComponent(ix).getClass().getName().equals("javax.swing.JMenuItem")) {
                    JMenuItem menu = (JMenuItem) jmVentanas.getMenuComponent(ix);
                    if (menu.getName() != null) {
                        if (menu.getName().equals(comp.getName())) {
                            jmVentanas.remove(menu);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jDesktopPane1ComponentRemoved

    private void jDesktopPane1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jDesktopPane1ComponentAdded
        // TODO add your handling code here:
        JInternalFrame comp = (JInternalFrame) evt.getChild();
        final String ix = String.valueOf(ixSeqVentanas++);
        comp.setName(ix);
        if (comp.getClass().getName().equals("satelite01.jifStartPage")) {
            this.jmiStartPage.setSelected(true);
        } else {
            JMenuItem menuItem = new JMenuItem(comp.getTitle());
            menuItem.setName(ix);
            jmVentanas.add(menuItem);
            menuItem.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    try {
                        for (int ix1 = 0; ix1 < jDesktopPane1.getComponentCount(); ix1++) {
                            JInternalFrame intFrame = (JInternalFrame) jDesktopPane1.getComponent(ix1);
                            if (intFrame.getName().equals(ix)) {
                                intFrame.setSelected(true);
                            }
                        }
                    } catch (PropertyVetoException ex) {
                        Log.error("Error al organizar ventanas", ex);
                    }
                }
            });
        }
    }//GEN-LAST:event_jDesktopPane1ComponentAdded
    private void jTree1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseReleased
        // TODO add your handling code here:
        int row = jTree1.getRowForLocation(evt.getX(), evt.getY());
        if (row == -1) {
            return;
        }
        jTree1.setSelectionRow(row);

        if (evt.isPopupTrigger()) {
            TreePath selPath = jTree1.getPathForLocation(evt.getX(), evt.getY());
            //DefaultMutableTreeNode nodeSel = (DefaultMutableTreeNode) selPath.getLastPathComponent();
            if (selPath.getPathCount() == 4) {
                jPopupMenu1.show((JComponent) evt.getSource(), evt.getX(), evt.getY());
            }
        }

    }//GEN-LAST:event_jTree1MouseReleased

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        int row[] = jTree1.getSelectionRows();
        TreePath selPath = jTree1.getPathForRow(row[0]);
        if (selPath != null) {
            DefaultMutableTreeNode nodeSel = (DefaultMutableTreeNode) selPath.getLastPathComponent();
            if (selPath.getPathCount() == 4) {
                LBE_Consulta consulta = (LBE_Consulta) nodeSel.getUserObject();
                showConsulta(consulta.getId());
            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jbInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInfoActionPerformed
        // TODO add your handling code here:
        jdInfoMain frmInfo = new jdInfoMain(this, false);
        frmInfo.setLocationRelativeTo(this);
        frmInfo.setVisible(true);
    }//GEN-LAST:event_jbInfoActionPerformed

    private void jbtCambPwdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCambPwdActionPerformed
        // TODO add your handling code here:
        jdCambiaPassword cambiaPasw = new jdCambiaPassword(this, true,
                Constantes.UsuarioLogin.getUsrLogin(), false);
        cambiaPasw.setLocationRelativeTo(this);
        cambiaPasw.setVisible(true);

    }//GEN-LAST:event_jbtCambPwdActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        jdInfoMain frmInfo = new jdInfoMain(this, false);
        frmInfo.setLocationRelativeTo(this);
        frmInfo.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jmiStartPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiStartPageActionPerformed
        // TODO add your handling code here:
        JCheckBoxMenuItem obj = (JCheckBoxMenuItem) evt.getSource();
        if (obj.isSelected()) {
            cargaStartPage();
        } else {
            if (startPage != null) {
                startPage.dispose();
            }
        }
    }//GEN-LAST:event_jmiStartPageActionPerformed
    int ixSeqVentanas = 1;

    private void showConsulta(int id) {
        jifConsulta cons = new jifConsulta(id);
        jDesktopPane1.add(cons);
        try {
            cons.setMaximum(true);
        } catch (Exception ex) {
            System.err.println("Error al maximizar:" + ex.getMessage());
        }
        cons.setVisible(true);
    }

    private void salir() {
        int rpta = JOptionPane.showConfirmDialog(this, "Confirma que desea salir?",
                "SALIR?", JOptionPane.YES_NO_OPTION);
        if (rpta == JOptionPane.YES_OPTION) {
            int widthPan = jSplitPane1.getDividerLocation();
            Constantes.propiedades.setProperty(Constantes.cPROP_WITH_PAN_LEFT,
                    String.valueOf(widthPan));
            try {
                Constantes.saveProps();
            } catch (LBU_Exception ex) {
                JOptionPane.showMessageDialog(this,
                        "Error al guardar propiedades: " + ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
            System.exit(0);
        }
    }

    public void setDividerLocation(int dividerLocation) {
        if (dividerLocation > 0) {
            jSplitPane1.setDividerLocation(dividerLocation);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JTree jTree1;
    private javax.swing.JButton jbApariencia;
    private javax.swing.JButton jbInfo;
    private javax.swing.JButton jbtCambPwd;
    private javax.swing.JLabel jlStatus;
    private javax.swing.JLabel jlUser;
    private javax.swing.JLabel jlVersion;
    private javax.swing.JMenu jmVentanas;
    private javax.swing.JMenuItem jmiCambiaPassword;
    private javax.swing.JMenuItem jmiCascada;
    private javax.swing.JMenuItem jmiMozaico;
    public javax.swing.JCheckBoxMenuItem jmiStartPage;
    private javax.swing.JMenuItem jmiUpdate;
    // End of variables declaration//GEN-END:variables
}
